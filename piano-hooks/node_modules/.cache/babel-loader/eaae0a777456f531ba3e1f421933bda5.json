{"ast":null,"code":"var _jsxFileName = \"/Users/racheljohnson/projects/piano-hooks/piano-hooks/src/Instrument.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState } from \"react\";\nimport InstrumentAudio from \"./InstrumentAudio\";\nimport getNotesBetween from \"./getNotesBetween\";\nimport isAccidentalNote from \"./isAccidentalNote\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Instrument = _ref => {\n  _s();\n  let {\n    instrumentName,\n    startNote,\n    endNote,\n    renderPianoKey,\n    keyboardMap\n  } = _ref;\n  const notes = getNotesBetween(startNote, endNote);\n  const [state, setState] = useState({\n    notesPlaying: []\n  });\n  const onPlayNoteStart = note => {\n    setState({\n      ...state,\n      notesPlaying: [...state.notesPlaying, note]\n    });\n  };\n  const onPlayNoteEnd = note => {\n    setState({\n      ...state,\n      notesPlaying: state.notesPlaying.filter(notePlaying => notePlaying !== note)\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notes.map(note => {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: renderPianoKey({\n          note,\n          isAccidentalNote: isAccidentalNote(note),\n          isNotePlaying: state.notesPlaying.includes(note),\n          startPlayingNote: () => onPlayNoteStart(note),\n          stopPlayingNote: () => onPlayNoteEnd(note)\n        })\n      }, note, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(InstrumentAudio, {\n      instrumentName: instrumentName,\n      notes: state.notesPlaying\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(Instrument, \"2ou9wGRCzkpli1Qwx350SWStM/I=\");\n_c = Instrument;\nexport default Instrument;\nvar _c;\n$RefreshReg$(_c, \"Instrument\");","map":{"version":3,"names":["React","Fragment","useState","InstrumentAudio","getNotesBetween","isAccidentalNote","Instrument","instrumentName","startNote","endNote","renderPianoKey","keyboardMap","notes","state","setState","notesPlaying","onPlayNoteStart","note","onPlayNoteEnd","filter","notePlaying","map","isNotePlaying","includes","startPlayingNote","stopPlayingNote"],"sources":["/Users/racheljohnson/projects/piano-hooks/piano-hooks/src/Instrument.js"],"sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport InstrumentAudio from \"./InstrumentAudio\";\nimport getNotesBetween from \"./getNotesBetween\";\nimport isAccidentalNote from \"./isAccidentalNote\";\n\nconst Instrument = ({\n    instrumentName,\n    startNote,\n    endNote,\n    renderPianoKey,\n    keyboardMap\n}) => {\n    const notes = getNotesBetween(startNote, endNote);\n\n    const [state, setState] = useState({\n        notesPlaying: []\n    });\n\n    const onPlayNoteStart = note => {\n        setState({ ...state, notesPlaying: [...state.notesPlaying, note] });\n    };\n\n    const onPlayNoteEnd = note => {\n        setState({\n            ...state,\n            notesPlaying: state.notesPlaying.filter(\n                notePlaying => notePlaying !== note\n            )\n        });\n    };\n\n    return (\n        <Fragment>\n            {notes.map(note => {\n                return (\n                    <Fragment key={note}>\n                        {renderPianoKey({\n                            note,\n                            isAccidentalNote: isAccidentalNote(note),\n                            isNotePlaying: state.notesPlaying.includes(note),\n                            startPlayingNote: () => onPlayNoteStart(note),\n                            stopPlayingNote: () => onPlayNoteEnd(note),\n                        })}\n                    </Fragment>\n                );\n            })}\n            <InstrumentAudio\n                instrumentName={instrumentName}\n                notes={state.notesPlaying}\n            />\n        </Fragment>\n    );\n};\n\nexport default Instrument;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,QAAQ,QAAQ,OAAO;AACjD,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,gBAAgB,MAAM,oBAAoB;AAAC;AAElD,MAAMC,UAAU,GAAG,QAMb;EAAA;EAAA,IANc;IAChBC,cAAc;IACdC,SAAS;IACTC,OAAO;IACPC,cAAc;IACdC;EACJ,CAAC;EACG,MAAMC,KAAK,GAAGR,eAAe,CAACI,SAAS,EAAEC,OAAO,CAAC;EAEjD,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC;IAC/Ba,YAAY,EAAE;EAClB,CAAC,CAAC;EAEF,MAAMC,eAAe,GAAGC,IAAI,IAAI;IAC5BH,QAAQ,CAAC;MAAE,GAAGD,KAAK;MAAEE,YAAY,EAAE,CAAC,GAAGF,KAAK,CAACE,YAAY,EAAEE,IAAI;IAAE,CAAC,CAAC;EACvE,CAAC;EAED,MAAMC,aAAa,GAAGD,IAAI,IAAI;IAC1BH,QAAQ,CAAC;MACL,GAAGD,KAAK;MACRE,YAAY,EAAEF,KAAK,CAACE,YAAY,CAACI,MAAM,CACnCC,WAAW,IAAIA,WAAW,KAAKH,IAAI;IAE3C,CAAC,CAAC;EACN,CAAC;EAED,oBACI,QAAC,QAAQ;IAAA,WACJL,KAAK,CAACS,GAAG,CAACJ,IAAI,IAAI;MACf,oBACI,QAAC,QAAQ;QAAA,UACJP,cAAc,CAAC;UACZO,IAAI;UACJZ,gBAAgB,EAAEA,gBAAgB,CAACY,IAAI,CAAC;UACxCK,aAAa,EAAET,KAAK,CAACE,YAAY,CAACQ,QAAQ,CAACN,IAAI,CAAC;UAChDO,gBAAgB,EAAE,MAAMR,eAAe,CAACC,IAAI,CAAC;UAC7CQ,eAAe,EAAE,MAAMP,aAAa,CAACD,IAAI;QAC7C,CAAC;MAAC,GAPSA,IAAI;QAAA;QAAA;QAAA;MAAA,QAQR;IAEnB,CAAC,CAAC,eACF,QAAC,eAAe;MACZ,cAAc,EAAEV,cAAe;MAC/B,KAAK,EAAEM,KAAK,CAACE;IAAa;MAAA;MAAA;MAAA;IAAA,QAC5B;EAAA;IAAA;IAAA;IAAA;EAAA,QACK;AAEnB,CAAC;AAAC,GA/CIT,UAAU;AAAA,KAAVA,UAAU;AAiDhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module"}