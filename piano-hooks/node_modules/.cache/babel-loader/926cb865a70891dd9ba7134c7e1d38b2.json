{"ast":null,"code":"var _jsxFileName = \"/Users/racheljohnson/projects/piano-hooks/piano-hooks/src/Instrument.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport isAccidentalNote from \"./isAccidentalNote\";\nimport { getKeyboardShortcutsForNote } from \"./getKeyboardShortcutsForNote\";\nimport InstrumentAudio from \"./InstrumentAudio\";\nimport getNotesBetween from \"./getNotesBetween\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isRegularKey = event => {\n  return !event.ctrlKey && !event.metaKey && !event.shiftKey;\n};\nconst Instrument = _ref => {\n  _s();\n  let {\n    instrumentName,\n    startNote,\n    endNote,\n    renderPianoKey,\n    keyboardMap\n  } = _ref;\n  const notes = getNotesBetween(startNote, endNote);\n  const [state, setState] = useState({\n    notesPlaying: []\n  });\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    window.addEventListener(\"keyup\", handleKeyUp);\n  }, []);\n  const getNoteFromKeyboardKey = keyboardKey => {\n    return keyboardMap[keyboardKey.toUpperCase()];\n  };\n  const handleKeyDown = e => {\n    if (isRegularKey(e) && !e.repeat) {\n      const note = getNoteFromKeyboardKey(e.key);\n      if (note) {\n        setState({\n          ...state,\n          notesPlaying: [...state.notesPlaying, note]\n        });\n      }\n    }\n  };\n  const handleKeyUp = e => {\n    if (isRegularKey(e) && !e.repeat) {\n      const note = getNoteFromKeyboardKey(e.key);\n      if (note) {\n        setState({\n          ...state,\n          notesPlaying: state.notesPlaying.filter(notePlaying => notePlaying !== note)\n        });\n      }\n    }\n  };\n  const onPlayNoteStart = note => {\n    setState({\n      ...state,\n      notesPlaying: [...state.notesPlaying, note]\n    });\n  };\n  const onPlayNoteEnd = note => {\n    setState({\n      ...state,\n      notesPlaying: state.notesPlaying.filter(notePlaying => notePlaying !== note)\n    });\n  };\n\n  //rendering piano keys\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notes.map(note => {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: renderPianoKey({\n          note,\n          isAccidentalNote: isAccidentalNote(note),\n          isNotePlaying: state.notesPlaying.includes(note),\n          startPlayingNote: () => onPlayNoteStart(note),\n          stopPlayingNote: () => onPlayNoteEnd(note),\n          keyboardShortcut: getKeyboardShortcutsForNote(keyboardMap, note)\n        })\n      }, note, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(InstrumentAudio, {\n      instrumentName: instrumentName,\n      notes: state.notesPlaying\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(Instrument, \"Xhpni0VI7JWHs/1/Lr8/K9npjMY=\");\n_c = Instrument;\nexport default Instrument;\nvar _c;\n$RefreshReg$(_c, \"Instrument\");","map":{"version":3,"names":["React","Fragment","useState","useEffect","isAccidentalNote","getKeyboardShortcutsForNote","InstrumentAudio","getNotesBetween","isRegularKey","event","ctrlKey","metaKey","shiftKey","Instrument","instrumentName","startNote","endNote","renderPianoKey","keyboardMap","notes","state","setState","notesPlaying","window","addEventListener","handleKeyDown","handleKeyUp","getNoteFromKeyboardKey","keyboardKey","toUpperCase","e","repeat","note","key","filter","notePlaying","onPlayNoteStart","onPlayNoteEnd","map","isNotePlaying","includes","startPlayingNote","stopPlayingNote","keyboardShortcut"],"sources":["/Users/racheljohnson/projects/piano-hooks/piano-hooks/src/Instrument.js"],"sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport isAccidentalNote from \"./isAccidentalNote\";\nimport { getKeyboardShortcutsForNote } from \"./getKeyboardShortcutsForNote\";\nimport InstrumentAudio from \"./InstrumentAudio\";\nimport getNotesBetween from \"./getNotesBetween\";\n\nconst isRegularKey = event => {\n    return !event.ctrlKey && !event.metaKey && !event.shiftKey;\n};\nconst Instrument = ({\n    instrumentName,\n    startNote,\n    endNote,\n    renderPianoKey,\n    keyboardMap\n}) => {\n    const notes = getNotesBetween(startNote, endNote);\n\n    const [state, setState] = useState({\n        notesPlaying: []\n    });\n\n    useEffect(() => {\n        window.addEventListener(\"keydown\", handleKeyDown);\n        window.addEventListener(\"keyup\", handleKeyUp);\n    }, []);\n\n    const getNoteFromKeyboardKey = keyboardKey => {\n        return keyboardMap[keyboardKey.toUpperCase()];\n    };\n\n    const handleKeyDown = e => {\n        if (isRegularKey(e) && !e.repeat) {\n            const note = getNoteFromKeyboardKey(e.key);\n            if (note) {\n                setState({ ...state, notesPlaying: [...state.notesPlaying, note] });\n            }\n        }\n    };\n\n    const handleKeyUp = e => {\n        if (isRegularKey(e) && !e.repeat) {\n            const note = getNoteFromKeyboardKey(e.key);\n            if (note) {\n                setState({\n                    ...state,\n                    notesPlaying: state.notesPlaying.filter(\n                        notePlaying => notePlaying !== note\n                    )\n                });\n            }\n        }\n    };\n\n    const onPlayNoteStart = note => {\n        setState({ ...state, notesPlaying: [...state.notesPlaying, note] });\n    };\n\n    const onPlayNoteEnd = note => {\n        setState({\n            ...state,\n            notesPlaying: state.notesPlaying.filter(\n                notePlaying => notePlaying !== note\n            )\n        });\n    };\n\n    //rendering piano keys\n    return (\n        <Fragment>\n            {notes.map(note => {\n                return (\n                    <Fragment key={note}>\n                        {renderPianoKey({\n                            note,\n                            isAccidentalNote: isAccidentalNote(note),\n                            isNotePlaying: state.notesPlaying.includes(note),\n                            startPlayingNote: () => onPlayNoteStart(note),\n                            stopPlayingNote: () => onPlayNoteEnd(note),\n                            keyboardShortcut: getKeyboardShortcutsForNote(keyboardMap, note)\n                        })}\n                    </Fragment>\n                );\n            })}\n\n            <InstrumentAudio\n                instrumentName={instrumentName}\n                notes={state.notesPlaying}\n            />\n        </Fragment>\n    );\n};\n\nexport default Instrument;"],"mappings":"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"},"metadata":{},"sourceType":"module"}